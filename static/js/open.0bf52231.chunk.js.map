{"version":3,"sources":["assets/img/open.png","slides/Open/styled.wrapper.js","slides/Open/index.js","component/UnderLineTitle.js","component/Floating.js"],"names":["module","exports","__webpack_require__","p","Wrapper","styled","W","_templateObject","Floating","Open","wrapperEle","useRef","_useAnimate","useAnimate","words","current","querySelectorAll","ani","targets","scale","opacity","easing","duration","delay","el","i","show","Object","slicedToArray","react_default","a","createElement","styled_wrapper","ref","UnderLineTitle","title","fs","fc","bg","className","DotLine","width","src","OpenImg","alt","Title","h1","_ref","_ref2","_ref3","_ref4","mb","_ref5","_ref5$mb","_ref5$fs","_ref5$bg","_ref5$fc","titleEle","useEffect","newArr","innerText","split","map","t","concat","innerHTML","join","letters","translateY","translateZ","react__WEBPACK_IMPORTED_MODULE_1___default","keyframes"],"mappings":"8EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wvBCIxC,IA+BeC,EA/BCC,kBAAOC,IAAPD,CAAHE,IA0BSC,aCoBPC,UAxCF,WACX,IAAMC,EAAaC,iBAAO,MADTC,EAgBFC,YAdC,WACd,IACMC,EADUJ,EAAWK,QACLC,iBAAiB,SACvCC,YAAI,CACFC,QAASJ,EACTK,MAAO,CAAC,GAAI,GACZC,QAAS,CAAC,EAAG,GACbC,OAAQ,cACRC,SAAU,IACVC,MAAO,SAASC,EAAIC,GAClB,OAAO,IAAMA,OAIZC,EAhBUC,OAAAC,EAAA,EAAAD,CAAAf,EAAA,MAkBjB,OACEiB,EAAAC,EAAAC,cAACC,EAAD,CAASC,IAAKvB,EAAYgB,KAAMA,GAC9BG,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,MAAM,gEACNC,GAAG,SACHC,GAAG,OACHC,GAAG,YAELT,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,QACbV,EAAAC,EAAAC,cAAA,MAAIQ,UAAU,QAAd,4EACAV,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMQ,UAAU,QAAhB,gBACAV,EAAAC,EAAAC,cAAA,QAAMQ,UAAU,QAAhB,kBAEFV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAASC,MAAM,UAEjBZ,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,UACbV,EAAAC,EAAAC,cAAA,OAAKW,IAAKC,IAASC,IAAI,2cCzC/B,IAAMC,EAAQxC,UAAOyC,GAAVvC,IAEA,SAAAwC,GAAA,OAAAA,EAAGV,IACC,SAAAW,GAAA,OAAAA,EAAGZ,IAIa,SAAAa,GAAA,OAAAA,EAAGX,IACf,SAAAY,GAAA,OAAAA,EAAGC,KAqCPjB,IA9BQ,SAAAkB,GAMjB,IALJjB,EAKIiB,EALJjB,MAKIkB,EAAAD,EAJJD,UAII,IAAAE,EAJC,OAIDA,EAAAC,EAAAF,EAHJhB,UAGI,IAAAkB,EAHC,OAGDA,EAAAC,EAAAH,EAFJd,UAEI,IAAAiB,EAFC,OAEDA,EAAAC,EAAAJ,EADJf,UACI,IAAAmB,EADC,UACDA,EACEC,EAAW9C,iBAAO,MAiBxB,OAhBA+C,oBAAU,WACR,IAAMvB,EAAQsB,EAAS1C,QACnB4C,EAASxB,EAAMyB,UAChBC,MAAM,IACNC,IAAI,SAAAC,GAAC,8BAAAC,OAA4BD,EAA5B,aACR5B,EAAM8B,UAAYN,EAAOO,KAAK,IAC9B,IAAMC,EAAUhC,EAAMnB,iBAAiB,WACvCC,YAAI,CACFC,QAASiD,EACTC,WAAY,CAAC,QAAS,GACtBC,WAAY,EACZ9C,MAAO,SAACC,EAAIC,GACV,OAAO,IAAMA,MAGhB,CAACU,IAEFmC,EAAAxC,EAAAC,cAACc,EAAD,CAAOZ,IAAKwB,EAAUN,GAAIA,EAAIf,GAAIA,EAAIE,GAAIA,EAAID,GAAIA,GAC/CF,oQC5CP,IAAM3B,EAAW+D,oBAAHhE,KAYCC","file":"static/js/open.0bf52231.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/open.467156be.png\";","import styled from \"styled-components\";\nimport Floating from \"../../component/Floating\";\nimport W from \"../../component/ContentWrapper\";\n\nconst Wrapper = styled(W)`\n  justify-content: center;\n  padding: 2rem;\n\n  .open {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-bottom: 3rem;\n    .desc {\n      font-size: 1rem;\n      margin-bottom: 1rem;\n    }\n    h1 {\n      font-size: 1.4rem;\n      font-weight: 800;\n      margin-bottom: 0.8rem;\n      .word {\n        display: inline-block;\n      }\n    }\n  }\n  .btmImg {\n    text-align: center;\n\n    img {\n      animation: 4s ${Floating} ease-in infinite;\n      width: 80%;\n    }\n  }\n`;\nexport default Wrapper;\n","import React, { useRef, useEffect } from \"react\";\n\nimport ani from \"animejs\";\nimport UnderLineTitle from \"../../component/UnderLineTitle\";\n\nimport DotLine from \"../../component/DotLine\";\nimport OpenImg from \"../../assets/img/open.png\";\nimport Wrapper from \"./styled.wrapper\";\nimport useAnimate from \"../../component/useAnimate\";\n\nconst Open = () => {\n  const wrapperEle = useRef(null);\n  const animate = () => {\n    const wrapper = wrapperEle.current;\n    const words = wrapper.querySelectorAll(\".word\");\n    ani({\n      targets: words,\n      scale: [14, 1],\n      opacity: [0, 1],\n      easing: \"easeOutCirc\",\n      duration: 800,\n      delay: function(el, i) {\n        return 800 * i;\n      }\n    });\n  };\n  const [show] = useAnimate(animate);\n\n  return (\n    <Wrapper ref={wrapperEle} show={show}>\n      <UnderLineTitle\n        title=\"四大亮点，您不得不来!\"\n        fs=\"1.2rem\"\n        fc=\"#fff\"\n        bg=\"#ffa71f\"\n      />\n      <div className=\"open\">\n        <h2 className=\"desc\">一场改变幼教人命运的课程</h2>\n        <h1>\n          <span className=\"word\">马上</span>\n          <span className=\"word\">开幕!</span>\n        </h1>\n        <DotLine width=\"100%\" />\n      </div>\n      <div className=\"btmImg\">\n        <img src={OpenImg} alt=\"开幕配图\" />\n      </div>\n    </Wrapper>\n  );\n};\nexport default Open;\n","import React, { useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ani from \"animejs\";\n\nconst Title = styled.h1`\n  padding-top: 0.1rem;\n  color: ${({ fc }) => fc};\n  font-size: ${({ fs }) => fs};\n  font-weight: 800;\n  display: inline-block;\n  /* padding-top: 0.2em; */\n  box-shadow: inset 0 -0.4em ${({ bg }) => bg};\n  margin-bottom: ${({ mb }) => mb};\n  overflow: hidden;\n  .letter {\n    display: inline-block;\n    line-height: 1em;\n  }\n`;\nconst UnderLineTitle = ({\n  title,\n  mb = \"2rem\",\n  fs = \"1rem\",\n  bg = \"#ccc\",\n  fc = \"#ff6a1c\"\n}) => {\n  const titleEle = useRef(null);\n  useEffect(() => {\n    const title = titleEle.current;\n    let newArr = title.innerText\n      .split(\"\")\n      .map(t => `<span class='letter'>${t}</span>`);\n    title.innerHTML = newArr.join(\"\");\n    const letters = title.querySelectorAll(\".letter\");\n    ani({\n      targets: letters,\n      translateY: [\"1.1em\", 0],\n      translateZ: 0,\n      delay: (el, i) => {\n        return 100 * i;\n      }\n    });\n  }, [title]);\n  return (\n    <Title ref={titleEle} mb={mb} fs={fs} bg={bg} fc={fc}>\n      {title}\n    </Title>\n  );\n};\nexport default UnderLineTitle;\n","import { keyframes } from \"styled-components\";\nconst Floating = keyframes`\n0% {\n    transform: translatey(0px);\n}\n50% {\n    transform: translatey(-8px);\n}\n100% {\n    transform: translatey(0px);\n}\n  \n`;\nexport default Floating;\n"],"sourceRoot":""}